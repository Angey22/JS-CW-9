{"version":3,"sources":["js_repeta_9-1/01-timeout.js"],"names":["require","console","dir","window","setTimeout","log","logger","time","concat","timerId","shouldCancelTimer","Math","random","clearTimeout"],"mappings":";;;AAqDA,aAnDAA,QAAA,qBAGAC,QAAQC,IAAIC,OAAOC,YACnBH,QAAQI,IAAI,mDAYZJ,QAAQI,IAAI,wBAYZJ,QAAQI,IAAI,2BACZJ,QAAQI,IAAI,mDASZ,IAAMC,EAAS,SAAAC,GACbN,QAAQI,IAAGG,aAAAA,OAAcD,EAAwC,wCAG7DE,EAAUL,WAAWE,EAAQ,IAAM,KAEzCL,QAAQI,IAAII,GAEZ,IAAMC,EAAoBC,KAAKC,SAAW,GAC1CX,QAAQI,IAAIK,GAERA,GACFG,aAAaJ","file":"01-timeout.1978ad8a.js","sourceRoot":"../src","sourcesContent":["//! Видео - 0:10:20...0:22:25\n\nimport '../css/common.css';\n\n//! Все \"таймауты\" относятся к сервисам браузера и являются методами объекта \"window\".\nconsole.dir(window.setTimeout);\nconsole.log('-----------------------------------------------');\n\n\n/*\n * Метод window.setTimeout(callback, delay, args):\n * - callback - вызываемая функция;\n * - delay - промежуток времени (в миллисекундах);\n * - args - аргументы для вызываемой функции.\n */\n// Метод \"setTimeout()\" Позволяет осуществить отложенный вызов определенной \"callback\" функции.\n\n//! Пример работы метода \"setTimeout()\":\nconsole.log('До вызова setTimeout');\n\n// setTimeout((x) => {\n//   console.log('Пример-1 (2000 мс) - Внутри callback для setTimeout');\n//   console.log('x =>', x);\n// }, 2000, 5); //!!!\n\n// setTimeout((y) => {\n//   console.log('Пример-2 (1000 мс) - Внутри callback для setTimeout');\n//   console.log('y =>', y);\n// }, 1000, 'Хрень как аргумент'); //!!!\n\nconsole.log('После вызова setTimeout');\nconsole.log('-----------------------------------------------');\n\n//! Смотри логи \"1\" и \"2\" в самом конце выводов консоли, после прошествия соответствующего временного интервала.\n\n\n/*\n * Очистка таймаута с clearTimeout(timeoutId)\n */\n\nconst logger = time => {\n  console.log(`Лог через ${time}ms, потому что не отменили таймаут`);\n};\n\nconst timerId = setTimeout(logger, 2000, 2000);\n\nconsole.log(timerId);\n\nconst shouldCancelTimer = Math.random() > 0.3;\nconsole.log(shouldCancelTimer);\n\nif (shouldCancelTimer) {\n  clearTimeout(timerId);\n}\n"]}