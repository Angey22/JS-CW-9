{"version":3,"sources":["js/01-timeout.js"],"names":["require","logger","time","console","log","concat","timerId","setTimeout","shouldCancelTimer","Math","random","clearTimeout"],"mappings":";;;AAmCA,aAnCAA,QAAA,qBAsBA,IAAMC,EAAS,SAAAC,GACbC,QAAQC,IAAGC,aAAAA,OAAcH,EAAwC,wCAG7DI,EAAUC,WAAWN,EAAQ,IAAM,KAEzCE,QAAQC,IAAIE,GAEZ,IAAME,EAAoBC,KAAKC,SAAW,GAC1CP,QAAQC,IAAII,GAERA,GACFG,aAAaL","file":"01-timeout.ce8d92cd.js","sourceRoot":"../src","sourcesContent":["import '../css/common.css';\n\n/*\n * Метод window.setTimeout(callback, delay, args)\n */\n\n// console.log('До вызова setTimeout');\n\n// setTimeout(() => {\n//   console.log('1 - Внутри callback для setTimeout');\n// }, 2000);\n\n// setTimeout(() => {\n//   console.log('2 - Внутри callback для setTimeout');\n// }, 1000);\n\n// console.log('После вызова setTimeout');\n\n/*\n * Очистка таймаута с clearTimeout(timeoutId)\n */\n\nconst logger = time => {\n  console.log(`Лог через ${time}ms, потому что не отменили таймаут`);\n};\n\nconst timerId = setTimeout(logger, 2000, 2000);\n\nconsole.log(timerId);\n\nconst shouldCancelTimer = Math.random() > 0.3;\nconsole.log(shouldCancelTimer);\n\nif (shouldCancelTimer) {\n  clearTimeout(timerId);\n}\n"]}