{"version":3,"sources":["js_repeta_9-2/03-racetrack.js"],"names":["require","horses","raceCounter","refs","startBtn","document","querySelector","winnerField","progressField","tableBody","onStart","promises","map","run","updateWinnerField","updateProgressField","determineWinner","waitForAll","horse","Promise","resolve","time","getRandomTime","setTimeout","min","max","Math","floor","random","message","textContent","horsesP","race","then","_ref","concat","updateResultsTable","_ref2","tr","insertAdjacentHTML","all","addEventListener"],"mappings":";;;AAqKA,aAlKAA,QAAA,qBAGA,IAAMC,EAAS,CACb,cACA,UACA,kBACA,aACA,cAoFEC,EAAc,EAGZC,EAAO,CACXC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,8BAOpC,SAASI,IACPR,GAAe,EACf,IAAMS,EAAWV,EAAOW,IAAIC,GAE5BC,EAAkB,IAClBC,EAAoB,4CACpBC,EAAgBL,GAChBM,EAAWN,GAIb,SAASE,EAAIK,GACX,OAAO,IAAIC,QAAQ,SAAAC,GACjB,IAAMC,EAAOC,EAAc,IAAM,MAEjCC,WAAW,WACTH,EAAQ,CAAEF,MAAAA,EAAOG,KAAAA,KAChBA,KAKP,SAASC,EAAcE,EAAKC,GAC1B,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAItD,SAASV,EAAkBe,GACzB1B,EAAKI,YAAYuB,YAAcD,EAIjC,SAASd,EAAoBc,GAC3B1B,EAAKK,cAAcsB,YAAcD,EAInC,SAASb,EAAgBe,GACvBZ,QAAQa,KAAKD,GAASE,KAAK,SAAAC,GAAqB,IAAlBhB,EAAKgB,EAALhB,MAAOG,EAAIa,EAAJb,KACnCP,EAAiBqB,cAAAA,OAAejB,EAAKiB,qBAAAA,OAAoBd,EACjD,kBACRe,EAAmB,CAAElB,MAAAA,EAAOG,KAAAA,EAAMnB,YAAAA,MAKtC,SAASkC,EAAkBC,GAA+B,IAA5BnB,EAAKmB,EAALnB,MAAOG,EAAIgB,EAAJhB,KAAMnB,EAAWmC,EAAXnC,YACnCoC,EAAEH,WAAAA,OAAcjC,EAAWiC,aAAAA,OAAYjB,EAAKiB,aAAAA,OAAYd,EAAgB,cAC9ElB,EAAKM,UAAU8B,mBAAmB,YAAaD,GAIjD,SAASrB,EAAWc,GAClBZ,QAAQqB,IAAIT,GAASE,KAAK,WACxBlB,EAAoB,2CAzDxBZ,EAAKC,SAASqC,iBAAiB,QAAS/B","file":"03-racetrack.3e6b17b0.js","sourceRoot":"../src","sourcesContent":["//! –í–∏–¥–µ–æ - 1:26:20...2:01:39\n\n// –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å—Ç–∏–ª–∏\nimport '../css/common.css';\n\n// –ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤ —Å –∏–º–µ–Ω–∞–º–∏ \"–ª–æ—à–∞–¥–µ–π\".\nconst horses = [\n  'Secretariat',\n  'Eclipse',\n  'West Australian',\n  'Flying Fox',\n  'Seabiscuit',\n];\n\n//!===========================================================\n\n//! –†–∞–±–æ—Ç–∞–µ–º —Å –æ–¥–Ω–∏–º \"–ø—Ä–æ–º–∏—Å–æ–º\".\n\n// –ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ - \"–ø—Ä–æ—Å—Ç–π –∑–∞–±–µ–≥ –æ–¥–Ω–æ–π –ª–æ—à–∞–¥–∏\".\n// function run(horse) { \n//   return new Promise((resolve) => {\n\n//     // –í—Ä–µ–º–µ–Ω–Ω–æ–π \"—Ä–∞–Ω–¥–æ–º–∞–π–∑–µ—Ä\".\n//     const time = getRandomTime(2000, 3500);\n\n//     setTimeout(() => {\n//       resolve({horse, time});\n//     }, time);\n\n//   });\n// }\n\n// –í—Å–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ–ª–ª-–±–µ–∫ —Ñ—É–Ω–∫—Ü–∏—è - \"–≤—Ä–µ–º–µ–Ω–∏\".\n// function getRandomTime(min, max) { \n//   return Math.floor(Math.random() * (max - min) + min);\n// }\n\n// –ó–∞–ø—É—Å–∫–∞–µ–º \"–∑–∞–±–µ–≥\".\n// run('–ú–∞–Ω–≥–æ').then(x => console.log(x));\n\n// –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–∞–±–æ—Ç—ã –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –±—É–¥–µ—Ç –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è \"–ø—Ä–æ–º–∏—Å–æ–º\". –ü—Ä–∏ —ç—Ç–æ–º, –≤ –æ–±—ä–µ–∫—Ç–µ –±—É–¥–µ—Ç –∑–∞–¥–∞–Ω–Ω–æ–µ –Ω–∞–º–∏ \"–∏–º—è –ª–æ—à–∞–¥–∏\" –∏ –≤—Ä–µ–º—è, –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ–Ω–∞ –ø—Ä–∏—à–ª–∞ –∫ —Ñ–∏–Ω–∏—à—É (—Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ \"–≤—Ä–µ–º–µ–Ω–∏\"), —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –∫–æ–¥ –∏ —Å–º–æ—Ç—Ä–∏ –∫–æ–Ω—Å–æ–ª—å.\n\n//!===========================================================\n\n//! –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ \"–ø—Ä–æ–º–∏—Å–æ–≤\".\n\n// –§—É–Ω–∫—Ü–∏—è - \"–∑–∞–±–µ–≥\".\n// function run(horse) { \n//   return new Promise((resolve) => {\n\n//     const time = getRandomTime(2000, 3500);\n\n//     setTimeout(() => {\n//       resolve({horse, time});\n//     }, time);\n\n//   });\n// }\n\n// –í—Å–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ–ª–ª-–±–µ–∫ —Ñ—É–Ω–∫—Ü–∏—è - \"–≤—Ä–µ–º–µ–Ω–∏\".\n// function getRandomTime(min, max) { \n//   return Math.floor(Math.random() * (max - min) + min);\n// }\n\n// –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é \"promises\" –∏ –∑–∞–¥–∞–µ–º –µ–π –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è -> —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Å—Å–∏–≤–∞ –∏–º–µ –ª–æ—à–∞–¥–µ–π \"horses\", –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥–∞—è –ª–æ—à–∞–¥—å –ø—Ä–æ–±–µ–∂–∞–ª–∞ –∑–∞–±–µ–≥ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é \"run()\".\n// 1-–π –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–ø–∏—Å–∏.\n// const promises = horses.map(horse => run(horse));\n\n// 2-–π –≤–∞—Ä–∏–∞–Ω—Ç –∑–∞–ø–∏—Å–∏.\n// const promises = horses.map(run);\n\n// –í—ã–≤–æ–¥–∏–º –≤ –ª–æ–≥ –º–∞—Å—Å–∏–≤ \"–ø—Ä–æ–º–∏—Å–æ–≤\".\n// console.log(\"promises =>\", promises);\n\n/*\n * Promise.race([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–º–∏—Å–∞\n */\n// –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Å—Å–∏–≤–æ–≤ \"–ø—Ä–æ–º–∏—Å–æ–≤\", –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ -> —Å–∞–º—ã–π –±—ã—Å—Ç—Ä—ã–π, –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, \"–ø—Ä–æ–º–∏—Å\". –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ, –º–µ—Ç–æ–¥ \"Promise.race([])\" –≤–µ—Ä–Ω–µ—Ç –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç - \"—Å —Å–∞–º–æ–π –±—ã—Å—Ç—Ä–æ–π –ª–æ—à–∞–¥—å—é\".\n\n// Promise.race(promises).then(x => console.log(x));\n\n\n/*\n * Promise.all([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤\n */\n// –ú–µ—Ç–æ–¥ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Å—Å–∏–≤–æ–≤ \"–ø—Ä–æ–º–∏—Å–æ–≤\", –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å—é –∫–æ–ª–ª–µ–∫—Ü–∏—é \"–ø—Ä–æ–º–∏—Å–æ–≤\", –ø–æ—Å–ª–µ –∏—Ö –ø–æ–ª–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ, –º–µ—Ç–æ–¥ \"Promise.all([])\" –≤–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤.\n\n// Promise.all(promises).then(x => console.log(x));\n\n\n//!===========================================================\n\n//! –†–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞–µ–º –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ \"–ø—Ä–æ–º–∏—Å–æ–≤\" —Å –≤–Ω–µ—à–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º HTML –¥–æ–∫—É–º–µ–Ω—Ç–∞.\n\n// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è - \"—Å—á–µ—Ç—á–∏–∫ –∑–∞–±–µ–≥–æ–≤\" –¥–ª—è —É—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ç–µ—Ä–∞—Ü–∏–π –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–¥–∞ —Å–∫—Ä–∏–ø—Ç–∞.\nlet raceCounter = 0;\n\n// –û–±—ä–µ–∫—Ç-—Å—Å—ã–ª–æ–∫ –Ω–∞ —Ç–µ–≥–∏ –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –≤ —Ä–∞–∑–º–µ—Ç–∫–µ HTML –¥–æ–∫—É–º–µ–Ω—Ç–∞.\nconst refs = {\n  startBtn: document.querySelector('.js-start-race'),\n  winnerField: document.querySelector('.js-winner'),\n  progressField: document.querySelector('.js-progress'),\n  tableBody: document.querySelector('.js-results-table > tbody'),\n};\n\n// \"–í–µ—à–∞–µ–º\" —Å–ª—É—à–∞—Ç–µ–ª—è –Ω–∞ –∫–Ω–æ–ø–∫—É \"—Å—Ç–∞—Ä—Ç–∞ –∑–∞–±–µ–≥–∞\", –∏ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–±—ã—Ç–∏—è 'click' –Ω–∞ –Ω–µ–π - –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–æ–ª–ª-–±–µ–∫ —Ñ—É–Ω–∫—Ü–∏—é \"onStart\".\nrefs.startBtn.addEventListener('click', onStart);\n\n// –ö–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ \"—Å—Ç–∞—Ä—Ç–∞ –∑–∞–±–µ–≥–∞\", –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Ä–æ–ª—å –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∫—Ä–∏–ø—Ç–∞, –≤–Ω—É—Ç—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–±—Ä–∞–Ω—ã –∏ –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è –≤—Å–µ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.\nfunction onStart() {\n  raceCounter += 1;\n  const promises = horses.map(run);\n\n  updateWinnerField('');\n  updateProgressField('ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');\n  determineWinner(promises);\n  waitForAll(promises);\n}\n\n// –§—É–Ω–∫—Ü–∏—è - \"–∑–∞–±–µ–≥\".\nfunction run(horse) {\n  return new Promise(resolve => {\n    const time = getRandomTime(2000, 3500);\n\n    setTimeout(() => {\n      resolve({ horse, time });\n    }, time);\n  });\n}\n\n// –§—É–Ω–∫—Ü–∏—è - \"–≤—Ä–µ–º–µ–Ω–∏\".\nfunction getRandomTime(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n// –§—É–Ω–∫—Ü–∏—è - \"–æ—á–∏—Å—Ç–∫–∏ –∏–º–µ–Ω–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∑–∞–±–µ–≥–∞ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–ª—É–∂–µ–±–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è\".\nfunction updateWinnerField(message) {\n  refs.winnerField.textContent = message;\n}\n\n// –§—É–Ω–∫—Ü–∏—è - \"–≤—ã–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\".\nfunction updateProgressField(message) {\n  refs.progressField.textContent = message;\n}\n\n// –§—É–Ω–∫—Ü–∏—è - \"–ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –∑–∞–µ–∑–¥–∞\".\nfunction determineWinner(horsesP) {\n  Promise.race(horsesP).then(({ horse, time }) => {\n    updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}\n    –≤—Ä–µ–º–µ–Ω–∏`);\n    updateResultsTable({ horse, time, raceCounter });\n  });\n}\n\n// –§—É–Ω–∫—Ü–∏—è - \"–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤\".\nfunction updateResultsTable({ horse, time, raceCounter }) {\n  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;\n  refs.tableBody.insertAdjacentHTML('beforeend', tr);\n}\n\n// –§—É–Ω–∫—Ü–∏—è - \"–æ–∫–æ–Ω—á–∞–Ω–∏—è –∑–∞–µ–∑–¥–∞\".\nfunction waitForAll(horsesP) {\n  Promise.all(horsesP).then(() => {\n    updateProgressField('üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.');\n  });\n}\n\n\n\n\n\n\n\n\n"]}