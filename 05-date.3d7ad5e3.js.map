{"version":3,"sources":["js_repeta_9-1/05-date.js"],"names":["require","date","Date","console","log","getDay","getMonth","getTime","date1","now","setTimeout","date2"],"mappings":";;;AAsDA,aApDAA,QAAA,qBAYA,IAAMC,EAAO,IAAIC,KAKjBC,QAAQC,IAAI,mBAAoBH,EAAKI,UAIrCF,QAAQC,IAAI,qBAAsBH,EAAKK,YAIvCH,QAAQC,IAAI,oBAAqBH,EAAKM,WAEtCJ,QAAQC,IAAI,mDAIZD,QAAQC,IAAI,iBAAkB,IAAIF,KAAK,IAEvCC,QAAQC,IAAI,gBAAiB,IAAIF,MACjCC,QAAQC,IAAI,mDAIZ,IAAMI,EAAQN,KAAKO,MACnBN,QAAQC,IAAI,WAAYI,GAIxBE,WAAW,WACT,IAAMC,EAAQT,KAAKO,MAEnBN,QAAQC,IAAI,WAAYI,GACxBL,QAAQC,IAAI,WAAYO,GAExBR,QAAQC,IAAI,kBAAmBO,EAAQH,IACtC","file":"05-date.3d7ad5e3.js","sourceRoot":"../src","sourcesContent":["//! Видео - 1:30:00...1:41:35\n\nimport '../css/common.css';\n\n/*\n * Основные концепции:\n * - создание времени;\n * - Unix-время;\n * - методы;\n * - разница времени;\n * - Date.now().\n*/\n\n// Использование встроенного конструктора класса \"Date\", который создает новый объект с набором методов и свойств.\nconst date = new Date();\n// Выводим в лог экземпляр класса \"Date\"\n// console.dir(date);\n\n// Виводим в лог текущий день, c помощью метода \"getDay()\".\nconsole.log('date.getDay() =>', date.getDay());\n//! 1-а в ответ, соответствует понедельнику, 2-а - вторнику и т.д.\n\n// Виводим в лог текущий месяц, c помощью метода \"getMonth()\".\nconsole.log('date.getMonth() =>', date.getMonth());\n//! Месяца считаются с \"0\" - январь, \"1\" - февраль и т.д.\n\n// Разбираем Unix-время, используя метод \"getTime()\".\nconsole.log('date.getTime() =>', date.getTime());\n//! Выводит в консоль число, которое показывает количество миллисекунд прошедших с 1-го января 1970 года 00:00 часов и до сегодняшнего момента. Указанная дата является точкой отсчета от которой компьютеры высчитывают время.\nconsole.log('-----------------------------------------------');\n\n\n// Нулевая точка отсчета даты и времени с учетом моего часового пояса.\nconsole.log('new Date(0) =>', new Date(0));\n// Текущая дата и время с учетом моего часового пояса\nconsole.log('new Date() =>', new Date());\nconsole.log('-----------------------------------------------');\n\n\n// Использование встроенного метод \"Date.now()\" для получения числа (количества миллисекунд), т.е. метод \"Date.now()\" позволяет получить текущую метку времени.\nconst date1 = Date.now();\nconsole.log('date1 =>', date1);\n//! Статический метод, который не создает экземпляр, а только лишь фиксирует текущее время - \"Date.now()\", выдовая нужное количество миллисекунд.\n\n// Создаем таймаут для вывода нескольких параметров даты и их разницы.\nsetTimeout(() => {\n  const date2 = Date.now();\n\n  console.log('date1 =>', date1);\n  console.log('date2 =>', date2);\n\n  console.log('date2 - date1 =', date2 - date1);\n}, 3000);\n\n//! Всегда есть погрешность в пределах 1000 миллесекунд.\n"]}